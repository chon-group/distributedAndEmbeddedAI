{"id":49,"name":"lcdKeyPad","agents":[{"archClass":"jason.Argo","name":"argoAGENT","sourceCode":"serialPort(ttyACM0).\t\t/* when using a original arduino board */\n//serialPort(ttyUSB0).\t\t/* when using a generic arduino board **/\n//serialPort(ttyEmulatedPort0).\t/* when using the simulIDE */\n\n/************************ Initial goals ************************/\n!start.\n\n/***************************** Plans ***************************/\n+!start: serialPort(P) <- \n\t.argo.port(P);\n\t.argo.limit(1000); \n\t.argo.percepts(open).\n\n-!start: not serialPort(P) <- .print(\"Without a serialPort belief!\").\n\n+!execAction(A) <- \n\t.random(R); .wait(2000*R); \n\t.argo.act(A).\n\n+!infoLCD(Message) <- \n\t.random(R); .wait(2000*R); \n\t.argo.act(Message).\n\n/***************** Perceptions plans *******************/\n+rainLast24hrs(R) <- .print(\"New perception-> rainLevel: \",R,\" mm\"). \n\n+humidity(H) <- .print(\"New perception-> humidity: \",H,\" %\"). \n\n+temperature(T) <- .print(\"New perception-> temperature: \",T,\" Celsius\").\n\n+port(P,S) <- .print(\"New perception-> Serial port \",P,\" is \",S).\n\n+device(D): D = arduinoWithLCDKeypadShield <- \n\t.print(\"Device connected: \",D); \n\t!infoLCD(\"ARGO online!\");\n\t!execAction(greenAlert)."}],"firmwares":[{"name":"lcdKeypadArduino","sourceCode":"#include <Javino.h>         //https://github.com/chon-group/javino2arduino\n#include <LiquidCrystal.h>  //https://www.arduino.cc/reference/en/libraries/liquidcrystal/\n\n// When using a physical arduino boar with the LCD Keypad Shield, uncomment the following:\n  #define PinLCDCtrl01 4\n  #define PinLCDCtrl02 5\n  #define PinLCDCtrl03 6\n  #define PinLCDCtrl04 7\n  #define PinLCDRS     8\n  #define PinLCDEN     9\n  #define PinLCDLight  10\n  #define LedRed       11\n  #define LedYellow    12\n  #define LedGreen     13\n\n// When using a simulated arduino with the SimulIDE, uncomment the following:\n/*\n  #define PinLCDCtrl01 5\n  #define PinLCDCtrl02 4\n  #define PinLCDCtrl03 3\n  #define PinLCDCtrl04 2\n  #define PinLCDRS     11\n  #define PinLCDEN     10\n  #define PinLCDLight  12\n  #define LedRed       7\n  #define LedYellow    8\n  #define LedGreen     9\n*/\n\n\nJavino javino;\nLiquidCrystal lcd(PinLCDRS, PinLCDEN, PinLCDCtrl01, PinLCDCtrl02, PinLCDCtrl03, PinLCDCtrl04);\nunsigned long lastClick = millis();\nString strBtnPressed = \"\";\nString lastLCDMsg = \"\";\nint option = 0;\nint temperature=25;\nint airHumidity=50;\nint rainLast24hrs=0;\n\nvoid serialEvent(){\n  javino.readSerial();\n}\n\nvoid setup() {\n pinMode(LedRed,OUTPUT);\n pinMode(LedGreen,OUTPUT);\n pinMode(LedYellow,OUTPUT);\n startLCDWithKeyboard();\n javino.start(9600);\n}\n \nvoid loop() {\n readLCDKeyboard();\n if(javino.availableMsg()){\n  if(javino.requestPercepts()) getExogenousPerceptions();\n  else if(javino.requestAction(\"redAlert\")) led(\"red\");\n  else if(javino.requestAction(\"yellowAlert\")) led(\"yellow\");\n  else if(javino.requestAction(\"greenAlert\")) led(\"green\");\n  else if(javino.requestAction(\"alertOff\")) led(\"off\");\n  else information(javino.getMsg());\n }\n}\n\nvoid information(String info){\n    lastLCDMsg = \"\";\n    lcd.clear();\n    writeInLCD(info);\n}\n\nvoid getExogenousPerceptions(){\n    javino.addPercept(\"device(arduinoWithLCDKeypadShield)\");\n    javino.addPercept(\"humidity(\"+String(airHumidity)+\")\");\n    javino.addPercept(\"temperature(\"+String(temperature)+\")\");\n    javino.addPercept(\"rainLast24hrs(\"+String(rainLast24hrs)+\")\");\n    javino.sendPercepts();\n}\n\nvoid startLCDWithKeyboard(){\n  pinMode(PinLCDLight, OUTPUT);\n  digitalWrite(PinLCDLight, HIGH);\n  lcd.begin(16, 2);\n  printScreen();\n }\n\nvoid readLCDKeyboard(){ \n  strBtnPressed = getBtnPressed();\n  if((strBtnPressed != \"none\" ) & (millis()>(lastClick+500))){\n\n      lastClick = millis();\n\n      if(strBtnPressed == \"select\") option=0;\n      else if(strBtnPressed == \"down\") option++;\n      else if(strBtnPressed == \"up\") option--;\n      printScreen();\n      \n  }\n  delay(50);\n}\n\n\nvoid printScreen(){\n  if(option<=0){\n    writeInLCD(\"Smart Home ...\");\n    writeInLCD(\"SEPEX 2024 \");\n    option=0;\n  }else if(option==1){\n    if(strBtnPressed==\"right\") temperature++;\n    if(strBtnPressed==\"left\")  temperature--;\n    writeInLCD(\"Temperature...\");\n    writeInLCD(String(temperature)+\"c\");       \n  }else if(option==2){\n    if(strBtnPressed==\"right\") airHumidity++;\n    if(strBtnPressed==\"left\")  airHumidity--;\n    writeInLCD(\"Air Humidity\");\n    writeInLCD(String(airHumidity)+\"%\");      \n  }else if(option>=3){\n    if(strBtnPressed==\"right\") rainLast24hrs = rainLast24hrs+5;\n    if(strBtnPressed==\"left\")  rainLast24hrs = rainLast24hrs-5;\n    writeInLCD(\"Rain last 24hrs\");\n    writeInLCD(String(rainLast24hrs)+\"mm\");  \n    option=3;    \n  }\n}\n\n\nString getBtnPressed(){\n    int input = analogRead(A0);\n    if     (input < 50) { return \"right\";}\n    else if(input < 150){ return \"up\";}\n    else if(input < 350){ return \"down\";}\n    else if(input < 550){ return \"left\";}\n    else if(input < 750){ return \"select\";}\n    else return \"none\"; \n}\n\nvoid writeInLCD(String strL){\n  if (strL.startsWith(\"\\\"\") && strL.endsWith(\"\\\"\")) {\n    strL.remove(0, 1);\n    strL.remove(strL.length() - 1); \n  }\n\n  int lengthStr = strL.length();\n  for (int startIndex = 0; startIndex < lengthStr; startIndex += 16) {\n    int endIndex = startIndex + 15;\n    if (endIndex >= lengthStr) {\n      endIndex = lengthStr - 1;\n    }\n    String chunk = strL.substring(startIndex, endIndex + 1);\n    digitalWrite(PinLCDLight, HIGH);\n    lcd.clear();\n    lcd.setCursor(0,0);\n    lcd.print(lastLCDMsg);\n    lcd.setCursor(0,1);\n    lcd.print(chunk);\n    lastLCDMsg = chunk;\n  }\n}\n\nvoid led(String op){\n  if(op==\"off\"){\n    digitalWrite(LedGreen,LOW);\n    digitalWrite(LedRed,LOW);\n    digitalWrite(LedYellow,LOW);\n  }else if(op==\"green\"){\n    led(\"off\");\n    digitalWrite(LedGreen,HIGH);\n  }else if(op==\"yellow\"){\n    led(\"off\");\n    digitalWrite(LedYellow,HIGH);\n  }else if(op==\"red\"){\n    led(\"off\");\n    digitalWrite(LedRed,HIGH);\n  }\n}\n"}]}