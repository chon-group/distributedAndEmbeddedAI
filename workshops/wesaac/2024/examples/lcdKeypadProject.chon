{"id":11,"name":"lcdKeypadProject","agents":[{"archClass":"jason.Argo","name":"agentARGO","sourceCode":"/* beliefs and rules */\nserialPort(ttyUSB0).\n\n/* Initial goals */\n!connect.\n\n/* Achievement Plans */\n+!connect: \nserialPort(Port) <- \n\t.print(\"Trying to connect at \",Port);\n\t.argo.port(Port); \n\t.argo.limit(500); \n\t.argo.percepts(open).\n\n+!infoLCD(M)  <- .argo.act(M).\n+!yellowAlert <- .argo.act(yellowOn).\n+!greenAlert  <- .argo.act(greenOn).\n+!redAlert    <- .argo.act(redOn).\n+!blueAlert   <- .argo.act(blueOn).\n\n/* Belief Plans */\n+device(D): \nD = arduinoWithLCDKeypadShield <- \n\t.my_name(N); \n\t.concat(N,\" is online!\",LCDMessage);\n\t!infoLCD(LCDMessage);\n\t.wait(1000);\n\t!redAlert.\n\n+port(Port,Status):\nStatus = off | Status = timeout <-\n\t.argo.percepts(close);\n\t.print(\"Serial port \",Port,\" is \",Status);\n\t.print(\"Stopping the MAS\");\n\t.stopMAS.\n\n+rainLast24hrs(RainStatus) <- .print(\"New perception-> rainLevel: \",RainStatus,\" mm\").\n\n+humidity(H) <- .print(\"New perception-> humidity: \",H,\" %\"). \n\n+temperature(T) <- .print(\"New perception-> temperature: \",T,\" Celsius\")."}],"firmwares":[{"name":"newSketch","sourceCode":"#include <Javino.h>         //https://github.com/chon-group/javino2arduino\n#include <LiquidCrystal.h>  //https://www.arduino.cc/reference/en/libraries/liquidcrystal/\n\n// When using a physical arduino boar with the LCD Keypad Shield, uncomment the following:\n  #define PinLCDCtrl01 4\n  #define PinLCDCtrl02 5\n  #define PinLCDCtrl03 6\n  #define PinLCDCtrl04 7\n  #define PinLCDRS     8\n  #define PinLCDEN     9\n  #define PinLCDLight  10\n  #define LedBlue       3  \n  #define LedRed       11\n  #define LedYellow    12\n  #define LedGreen     13\n\n\nJavino javino;\nLiquidCrystal lcd(PinLCDRS, PinLCDEN, PinLCDCtrl01, PinLCDCtrl02, PinLCDCtrl03, PinLCDCtrl04);\nunsigned long lastClick = millis();\nString strBtnPressed = \"\";\nString lastLCDMsg = \"\";\nint option = 0;\nint temperature=25;\nint airHumidity=50;\nint rainLast24hrs=0;\n\nvoid serialEvent(){\n  javino.readSerial();\n}\n\nvoid setup() {\n pinMode(LedBlue,OUTPUT); \n pinMode(LedRed,OUTPUT);\n pinMode(LedGreen,OUTPUT);\n pinMode(LedYellow,OUTPUT);\n startLCDWithKeyboard();\n javino.start(9600);\n}\n \nvoid loop() {\n readLCDKeyboard();\n if(javino.availableMsg()){\n  if(javino.requestPercepts()) getExogenousPerceptions();\n  else if(javino.requestAction(\"blueOn\")) led(\"blueOn\");\n  else if(javino.requestAction(\"redOn\")) led(\"redOn\");\n  else if(javino.requestAction(\"yellowOn\")) led(\"yellowOn\");\n  else if(javino.requestAction(\"greenOn\")) led(\"greenOn\");\n  else if(javino.requestAction(\"blueOff\")) led(\"blueOff\");\n  else if(javino.requestAction(\"redOff\")) led(\"redOff\");\n  else if(javino.requestAction(\"yellowOff\")) led(\"yellowOff\");\n  else if(javino.requestAction(\"greenOff\")) led(\"greenOff\");  \n  else information(javino.getMsg());\n }\n}\n\nvoid information(String info){\n    lastLCDMsg = \"\";\n    lcd.clear();\n    writeInLCD(info);\n}\n\nvoid getExogenousPerceptions(){\n    javino.addPercept(\"device(arduinoWithLCDKeypadShield)\");\n    javino.addPercept(\"humidity(\"+String(airHumidity)+\")\");\n    javino.addPercept(\"temperature(\"+String(temperature)+\")\");\n    javino.addPercept(\"rainLast24hrs(\"+String(rainLast24hrs)+\")\");\n    javino.sendPercepts();\n}\n\nvoid startLCDWithKeyboard(){\n  pinMode(PinLCDLight, OUTPUT);\n  digitalWrite(PinLCDLight, HIGH);\n  lcd.begin(16, 2);\n  printScreen();\n }\n\nvoid readLCDKeyboard(){ \n  strBtnPressed = getBtnPressed();\n  if((strBtnPressed != \"none\" ) & (millis()>(lastClick+500))){\n\n      lastClick = millis();\n\n      if(strBtnPressed == \"select\") option=0;\n      else if(strBtnPressed == \"down\") option++;\n      else if(strBtnPressed == \"up\") option--;\n      printScreen();\n      \n  }\n  delay(50);\n}\n\n\nvoid printScreen(){\n  if(option<=0){\n    writeInLCD(\"WESAAC 2024 Home\");\n    writeInLCD(\" \");\n    option=0;\n  }else if(option==1){\n    if(strBtnPressed==\"right\") temperature++;\n    if(strBtnPressed==\"left\")  temperature--;\n    writeInLCD(\"Temperature...\");\n    writeInLCD(String(temperature)+\"c\");       \n  }else if(option==2){\n    if(strBtnPressed==\"right\") airHumidity++;\n    if(strBtnPressed==\"left\")  airHumidity--;\n    writeInLCD(\"Air Humidity\");\n    writeInLCD(String(airHumidity)+\"%\");      \n  }else if(option>=3){\n    if(strBtnPressed==\"right\") rainLast24hrs = rainLast24hrs+5;\n    if(strBtnPressed==\"left\")  rainLast24hrs = rainLast24hrs-5;\n    writeInLCD(\"Rain last 24hrs\");\n    writeInLCD(String(rainLast24hrs)+\"mm\");  \n    option=3;    \n  }\n}\n\n\nString getBtnPressed(){\n    int input = analogRead(A0);\n    if     (input < 50) { return \"right\";}\n    else if(input < 150){ return \"up\";}\n    else if(input < 350){ return \"down\";}\n    else if(input < 550){ return \"left\";}\n    else if(input < 750){ return \"select\";}\n    else return \"none\"; \n}\n\n\nvoid writeInLCD(String strL){\n  if (strL.startsWith(\"\\\"\") && strL.endsWith(\"\\\"\")) {\n    strL.remove(0, 1);\n    strL.remove(strL.length() - 1); \n  }\n\n  int lengthStr = strL.length();\n  for (int startIndex = 0; startIndex < lengthStr; startIndex += 16) {\n    int endIndex = startIndex + 15;\n    if (endIndex >= lengthStr) {\n      endIndex = lengthStr - 1;\n    }\n    String chunk = strL.substring(startIndex, endIndex + 1);\n    digitalWrite(PinLCDLight, HIGH);\n    lcd.clear();\n    lcd.setCursor(0,0);\n    lcd.print(lastLCDMsg);\n    lcd.setCursor(0,1);\n    lcd.print(chunk);\n    lastLCDMsg = chunk;\n  }\n}\n\nvoid led(String op){\n  if(op==\"greenOff\"){\n    digitalWrite(LedGreen,LOW);\n  }else if(op==\"yellowOff\"){\n    digitalWrite(LedYellow,LOW);\n  }else if(op==\"redOff\"){\n    digitalWrite(LedRed,LOW);  \n  }else if(op==\"blueOff\"){\n    digitalWrite(LedBlue,LOW);\n  }else if(op==\"greenOn\"){\n    digitalWrite(LedGreen,HIGH);\n  }else if(op==\"yellowOn\"){\n    digitalWrite(LedYellow,HIGH);\n  }else if(op==\"redOn\"){\n    digitalWrite(LedRed,HIGH);\n  }else if(op==\"blueOn\"){\n    digitalWrite(LedBlue,HIGH);\n  }\n}\n"}]}