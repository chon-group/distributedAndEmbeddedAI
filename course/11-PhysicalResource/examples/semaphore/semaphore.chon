{"id":80,"name":"semaphore","agents":[{"archClass":"jason.Argo","name":"agentARGO","sourceCode":"!start.\n\n+!start <-\n\t.argo.port(ttyUSB0);\n\t.argo.percepts(open);\n\t.argo.limit(2500).\n\n+statusLed(off) <- .print(\"ligando o LED!\"); .argo.act(ledOn).\n+statusLed(on)  <- .print(\"desligando o LED!\"); .argo.act(ledOff)."}],"firmwares":[{"name":"semaforo","sourceCode":"#include <Javino.h> //https://github.com/chon-group/javino2arduino\nJavino javino;\n\nvoid setup() {\n pinMode(13,OUTPUT); pinMode(12,OUTPUT); // modo de operaÃƒÆ’Ã‚Â§ÃƒÆ’Ã‚Â£o da GPIO 12\n pinMode(11,OUTPUT); pinMode(10,OUTPUT); // modo de operaÃƒÆ’Ã‚Â§ÃƒÆ’Ã‚Â£o da GPIO 10\n \n javino.start(9600);  \t\t \t\t// definindo a velocidade da comunicacao\n\n javino.act[\"ledOn\"]  = funcaoParaLigarLed;     \n javino.act[\"ledOff\"] = funcaoParaDesligarLed;  \n javino.act[\"blink\"]  = blink;\n\n javino.perceive(funcaoParaInformarOAgente);\n}\n\nvoid serialEvent(){javino.readSerial();}   /* obrigatorio */\n\nvoid funcaoParaInformarOAgente(){\n\tif(digitalRead(13)==HIGH){\n\t   javino.addPercept(\"statusLed(on)\");\n\t}else{\n\t   javino.addPercept(\"statusLed(off)\");\n\t}\n}\n\nvoid loop(){javino.run();}\n\nvoid funcaoParaLigarLed(){digitalWrite(13,HIGH);}\n\nvoid funcaoParaDesligarLed(){digitalWrite(13,LOW);}\n\nvoid blink() {\n digitalWrite(13,HIGH); delay(1000);\n digitalWrite(13,LOW); delay(1000);\n}"}]}