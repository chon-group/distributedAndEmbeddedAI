{"id":80,"name":"semaphoreExercise","agents":[{"archClass":"jason.Argo","name":"agentARGO","sourceCode":"!start.\n\n+!start <-\n\t.argo.port(ttyUSB0);\n\t.argo.percepts(open);\n\t.argo.limit(500).\n\n+semaphore(redOn) <- .print(\"Vermelho\"); .random(R); .wait((2000*R)+1000); .argo.act(greenOn).\n+semaphore(yellowOn) <- .print(\"Amarelo\"); .random(R); .wait((2000*R)+1000); .argo.act(redOn).\n+semaphore(greenOn) <- .print(\"Verde\"); .random(R); .wait((2000*R)+1000); .argo.act(yellowOn)."}],"firmwares":[{"name":"semaforo","sourceCode":"#include <Javino.h> //https://github.com/chon-group/javino2arduino\nJavino javino;\n\nvoid setup() {\n pinMode(13,OUTPUT); pinMode(12,OUTPUT); pinMode(11,OUTPUT); pinMode(10,OUTPUT); // modo de op GPIO\n \n javino.start(9600);  \t\t    // definindo a velocidade da comunicacao\n\n javino.act[\"redOn\"]  = redOn;      // definindo acao ledOn\n javino.act[\"yellowOn\"] = yellowOn; // definindo acao ledOf\n javino.act[\"greenOn\"] = greenOn;   // definindo acao ledOf\n\n javino.perceive(semaphoreStatus);\n\n redOn();\n}\n\nvoid serialEvent(){javino.readSerial();}   /* obrigatorio */\n\nvoid semaphoreStatus(){\n\tif(digitalRead(12)==HIGH){\n\t   javino.addPercept(\"semaphore(redOn)\");\n\t}else if(digitalRead(11)==HIGH){\n           javino.addPercept(\"semaphore(yellowOn)\");\n\t}else{\n\t   javino.addPercept(\"semaphore(greenOn)\");\n\t}\n}\n\nvoid loop(){javino.run();}\n\nvoid redOn(){digitalWrite(12,HIGH); digitalWrite(11,LOW); digitalWrite(10,LOW);}\nvoid yellowOn(){digitalWrite(12,LOW); digitalWrite(11,HIGH); digitalWrite(10,LOW);}\nvoid greenOn(){digitalWrite(12,LOW); digitalWrite(11,LOW); digitalWrite(10,HIGH);}\n\nvoid blink() {\n digitalWrite(13,HIGH); delay(1000);\n digitalWrite(13,LOW); delay(1000);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}]}