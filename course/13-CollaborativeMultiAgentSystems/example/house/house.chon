{"id":26,"name":"house","agents":[{"archClass":"Argo","name":"agenteArgo","sourceCode":"serialPort(ttyEmulatedPort0).\n!start.\n\n+!start: serialPort(Port) <-\n\t.abolish(port(Port,_));\n\t.print(\"Tentando conexao com os Sensores!\"); \n\t.port(Port); .limit(750); .percepts(open).\n\n+port(Port,Status):\nStatus = off | Status = timeout <-\n\t.print(\"Sensor Offline! tentando conectar em alguns instantes.\");\n\t.percepts(close); .wait(10000); !start.\n\n+port(Port,Status): Status = on & not configuracao(ok)<- \n\t.print(\"Sensor conectado, mas sem planos! Aguardando Planos...\"); \n\t.percepts(close); .wait(30000); !start.\t\t\t"},{"archClass":"Communicator","name":"agenteCommunicator","sourceCode":"myUUID(\"efa435a4-42f5-4927-8d4b-2c77ce9e8eed\").\nbombeirosUUID(\"bcb38a40-8605-4f07-a94a-d96678498165\").\ngateway(\"skynet.chon.group\",5500).  \n\n!buscarConfiguracoes.\n\n+!conectar: gateway(Server,Port) & myUUID(MyID) & bombeirosUUID(Bombeiros)  <-  \n\t.connectCN(Server,Port,MyID);\n\t.random(R); .wait(2000*R).\n\n+!buscarConfiguracoes: bombeirosUUID(Bombeiros) <-\n\t!conectar;\n\t.print(\"Solicitando planos para \",Bombeiros);\n\t.sendOut(Bombeiros,achieve,getConf(self,communicator));\n\n\t.print(\"Solicitando configuracoes dos sensores de \",Agente,\" para \",Bombeiros);\n\t.sendOut(Bombeiros,achieve,getConf(agenteArgo,argo)).\n\n+!novoPlano(Agente,Plano)[source(Externo)] <-\n\t.print(\"Novo plano para \",Agente,\":\",Plano);\n\t.send(Agente,tellHow,Plano).\n\n+!novaCrenca(Agente,Crenca)[source(Externo)] <-\n\t.print(\"Encaminhando nova belief \",Crenca,\" para \",Agente);\n\t.send(Agente,tell,Crenca)."}],"firmwares":[{"name":"moduloSensorIncendio","sourceCode":"#include <Javino.h>   /* https://github.com/chon-group/javino2arduino/releases/latest */\n#include <DHT12.h>    /* https://www.arduino.cc/reference/en/libraries/dht12-sensor-library/ */ \nconst int temp=4; const int fumaca=2; const int vermelho=5; const int verde = 3; const int buzzer=11; /* GPIO pin */\n\nJavino javino;      \nDHT12 dht12(temp, true);\n\nvoid setup() {\n javino.act[\"aviso\"]  = funcaoAviso;      \n javino.act[\"standby\"] = funcaoStandby;\n javino.perceive(getExogenousPerceptions);\n javino.start(9600);\n pinMode(temp,INPUT); pinMode(fumaca,INPUT); pinMode(buzzer,OUTPUT);  pinMode(vermelho,OUTPUT); pinMode(verde,OUTPUT); \n}\n\nvoid serialEvent(){ javino.readSerial(); }\nvoid loop() {  javino.run(); }\nvoid funcaoAviso(){ digitalWrite(vermelho,HIGH); digitalWrite(verde,LOW);  tone(buzzer, 1000); }\nvoid funcaoStandby(){ digitalWrite(vermelho,LOW); digitalWrite(verde,HIGH);  noTone(buzzer); }\n\nvoid getExogenousPerceptions(){\n  if(digitalRead(fumaca) == 0){ javino.addPercept(\"fumaca(false)\");} else{ javino.addPercept(\"fumaca(true)\"); }\n  float temp = dht12.readTemperature();  javino.addPercept(\"temperatura(\"+String(temp)+\")\");\n}"}]}
